#!/bin/bash
# Usage:
#   ./ka "kubectl get ns"
#   ./ka "kubectl get ns" "dev*"          # Only clusters starting with 'dev'
#   ./ka "kubectl get ns" "*prod|*stage"  # Multiple patterns (|)

if [ $# -lt 1 ]; then
  echo "Usage: $0 \"kubectl command\" [cluster-name-pattern]"
  exit 1
fi

COMMAND="$1"
PATTERN="$2"

# Loop through all contexts
kubectl config get-contexts -o name | while read -r ctx; do
  kubectl config use-context "$ctx" >/dev/null 2>&1

  # Get current cluster name
  CLUSTER_NAME=$(kubectl config view --minify -o jsonpath='{.clusters[0].name}')

  # If pattern is provided, check if cluster name matches any glob
  if [ -n "$PATTERN" ]; then
    MATCHED=false
    IFS='|' read -ra patterns <<< "$PATTERN"
    for p in "${patterns[@]}"; do
      if [[ "$CLUSTER_NAME" == $p ]]; then
        MATCHED=true
        break
      fi
    done
    $MATCHED || continue
  fi

  # Show header
  echo -e "\n\033[1;34m===\033[0m \033[1;33m[$CLUSTER_NAME]\033[0m \033[1;34m===\033[0m"

  # Run the command
  eval "$COMMAND"
done
