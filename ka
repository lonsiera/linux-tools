#!/bin/bash
# Usage examples:
#   ./ka kubectl get ns
#   ./ka kubectl get ns dev*
#   ./ka kubectl get pods -A '*prod*|*dev*'

if [ $# -lt 1 ]; then
  echo "Usage: $0 <kubectl command...> [cluster-name-pattern (optional)]"
  exit 1
fi

# Last argument is the filter if more than one arg
if [ $# -gt 1 ]; then
  FILTER="${@: -1}"          # Last argument
  CMD_ARGS=("${@:1:$#-1}")    # All but last argument
else
  FILTER=""
  CMD_ARGS=("$@")
fi

# Loop through all contexts
kubectl config get-contexts -o name | while read -r ctx; do
  kubectl config use-context "$ctx" >/dev/null 2>&1

  # Get current cluster name
  CLUSTER_NAME=$(kubectl config view --minify -o jsonpath='{.clusters[0].name}')

  # Filter clusters if a pattern is provided
  if [ -n "$FILTER" ]; then
    MATCHED=false
    IFS='|' read -ra patterns <<< "$FILTER"
    for p in "${patterns[@]}"; do
      if [[ "$CLUSTER_NAME" == $p ]]; then
        MATCHED=true
        break
      fi
    done
    $MATCHED || continue
  fi

  # Show cluster header
  echo -e "\n\033[1;34m===\033[0m \033[1;33m[$CLUSTER_NAME]\033[0m \033[1;34m===\033[0m"

  # Run the command
  "${CMD_ARGS[@]}"
done
