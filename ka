#!/bin/bash
# Usage:
#   ./ka kubectl get ns
#   ./ka kubectl get ns "dev.*"
#   ./ka kubectl get pods -A "dev.*|stage.*"

if [ $# -lt 1 ]; then
  echo "Usage: $0 <kubectl command...> [cluster-pattern (optional)]"
  exit 1
fi

# Extract pattern and command
if [ $# -gt 1 ]; then
  PATTERN="${@: -1}"           # Last argument = pattern
  CMD_ARGS=("${@:1:$#-1}")     # All but last = kubectl command
else
  PATTERN=""
  CMD_ARGS=("$@")
fi

# Loop through contexts
kubectl config get-contexts -o name | while read -r ctx; do
  kubectl config use-context "$ctx" >/dev/null 2>&1

  # Get current cluster name
  CLUSTER_NAME=$(kubectl config view --minify -o jsonpath='{.clusters[0].name}')

  # Filter using grep if pattern is provided
  if [ -n "$PATTERN" ] && ! echo "$CLUSTER_NAME" | grep -Eq "$PATTERN"; then
    continue
  fi

  # Output header
  echo -e "\n\033[1;34m===\033[0m \033[1;33m[$CLUSTER_NAME]\033[0m \033[1;34m===\033[0m"

  # Run the command
  "${CMD_ARGS[@]}"
done
